shiny::runApp('App Regresion IPC')
runApp('App Regresion IPC')
setwd("D:/OneDrive - Escuela Politécnica Nacional/PUCE/A. Investigaciones/PreciosConsumidor/Modelamiento/App Regresion IPC")
runApp()
runApp('D:/OneDrive - Escuela Politécnica Nacional/PUCE/A. Investigaciones/PreciosConsumidor/Modelamiento/App Cluster IPC')
library(dplyr)
library(dygraphs)
nivel = c('Nacional'=1,
'Región Sierra'=2,
'Región Costa'=3,
'Guayaquil'=4,
'Esmeraldas'=5,
'Machala'=6,
'Manta'=7,
'Santo Domingo'=8,
'Quito'=9,
'Loja'=10,
'Cuenca'=11,
'Ambato'=12))
nivel = c('Nacional'=1,
'Región Sierra'=2,
'Región Costa'=3,
'Guayaquil'=4,
'Esmeraldas'=5,
'Machala'=6,
'Manta'=7,
'Santo Domingo'=8,
'Quito'=9,
'Loja'=10,
'Cuenca'=11,
'Ambato'=12)
nivel = c('Nacional'=1,
'Región Sierra'=2,
'Región Costa'=3,
'Guayaquil'=4,
'Esmeraldas'=5,
'Machala'=6,
'Manta'=7,
'Santo Domingo'=8,
'Quito'=9,
'Loja'=10,
'Cuenca'=11,
'Ambato'=12)
h=1
nivel = c('Nacional'=1,
'Región Sierra'=2,
'Región Costa'=3,
'Guayaquil'=4,
'Esmeraldas'=5,
'Machala'=6,
'Manta'=7,
'Santo Domingo'=8,
'Quito'=9,
'Loja'=10,
'Cuenca'=11,
'Ambato'=12)
nivel[h]
as.numeric(nivel[h])
IPChist = read_excel("Data/ipc_ind_nac.xls",sheet = as.numeric(nivel[h]), skip = 4)
setwd("D:/OneDrive - Escuela Politécnica Nacional/PUCE/A. Investigaciones/PreciosConsumidor/Modelamiento/App Cluster IPC")
h=1
nivel = c('Nacional'=1,
'Región Sierra'=2,
'Región Costa'=3,
'Guayaquil'=4,
'Esmeraldas'=5,
'Machala'=6,
'Manta'=7,
'Santo Domingo'=8,
'Quito'=9,
'Loja'=10,
'Cuenca'=11,
'Ambato'=12)
IPChist = read_excel("Data/ipc_ind_nac.xls",sheet = as.numeric(nivel[h]), skip = 4)
IPChist
View(IPChist)
runApp()
#>> Carga de Datos -----------------------------------------------
load("Data/DatosAux.RData")
View(Productos)
View(Productos)
View(IPChist)
IPChist = read_excel("Data/ipc_ind_nac.xls",sheet = as.numeric(nivel[h]), skip = 4)
runApp()
setwd("D:/OneDrive - Escuela Politécnica Nacional/PUCE/A. Investigaciones/PreciosConsumidor/Modelamiento/Poder de Mercado (Incrementos Marzo 2015)")
library(dygraphs)
library(dplyr)
library(readxl)
load("Data/DatosAux.RData")
h=1
nivel = c('Nacional'=1,
'Región Sierra'=2,
'Región Costa'=3,
'Guayaquil'=4,
'Esmeraldas'=5,
'Machala'=6,
'Manta'=7,
'Santo Domingo'=8,
'Quito'=9,
'Loja'=10,
'Cuenca'=11,
'Ambato'=12)
IPChist = read_excel("Data/ipc_ind_nac.xls",sheet = as.numeric(nivel[h]), skip = 4)
IPChist = IPChist[,-dim(IPChist)[2]]
Nombres[2] = "Producto"
names(IPChist) = Nombres
IPChist = IPChist[-c(1,dim(IPChist)[1] , dim(IPChist)[1]-1) , ]
IPCprod = inner_join(Productos,IPChist)
View(IPCprod)
IPC=IPCprod
View(IPChist)
View(Productos)
View(IPCprod)
IPCprod[1,]
#Clasificación -----------------------------
IPC = IPCprod[1,]
IPC[1]
IPCaux = IPC[-c(1:3)]
Prod = IPC[1]
ProdAbr = IPC[2]
IPCaux = IPC[-c(1:3)]
IPCaux
IPCaux["01/04/15"]
VarIPCMarzo = (IPCaux["01/03/15"]-IPCaux["01/02/15"])/IPCaux["01/02/15"]
VarIPCAbril = (IPCaux["01/04/15"]-IPCaux["01/03/15"])/IPCaux["01/03/15"]
VarIPCMarzo
VarIPCAbril
#Clasificación -----------------------------
IPC = IPCprod[4,]
Prod = IPC[1]
ProdAbr = IPC[2]
IPCaux = IPC[-c(1:3)]
VarIPCMarzo = (IPCaux["01/03/15"]-IPCaux["01/02/15"])/IPCaux["01/02/15"]
VarIPCAbril = (IPCaux["01/04/15"]-IPCaux["01/03/15"])/IPCaux["01/03/15"]
VarIPCAbril
VarPorcent = function(IPC){
Prod = IPC[1]
ProdAbr = IPC[2]
IPCaux = IPC[-c(1:3)]
VarIPCMarzo = (IPCaux["01/03/15"]-IPCaux["01/02/15"])/IPCaux["01/02/15"]
VarIPCAbril = (IPCaux["01/04/15"]-IPCaux["01/03/15"])/IPCaux["01/03/15"]
VarIPC = c("VarMarzo" = VarIPCMarzo, "VarAbril"=VarIPCAbril)
return(VarIPC)
}
VarPorcent = function(IPCi){
# Prod = IPCi[1]
# ProdAbr = IPCi[2]
IPCaux = IPCi[-c(1:3)]
VarIPCMarzo = (IPCaux["01/03/15"]-IPCaux["01/02/15"])/IPCaux["01/02/15"]
VarIPCAbril = (IPCaux["01/04/15"]-IPCaux["01/03/15"])/IPCaux["01/03/15"]
VarIPC = c("VarMarzo" = VarIPCMarzo, "VarAbril"=VarIPCAbril)
return(VarIPC)
}
lapply(IPCprod, VarPorcent)
IPCprod
lapply(IPCprod, VarPorcent)
View(IPCprod)
lapply(IPCprod, VarPorcent,MARGIN = 1)
apply(IPCprod, VarPorcent,MARGIN = 1)
apply(IPCprod, MARGIN = 1, VarPorcent)
apply(X=IPCprod,MARGIN = 1,FUN = VarPorcent)
VarPorcent = function(IPCi){
# Prod = IPCi[1]
# ProdAbr = IPCi[2]
IPCaux = IPCi[-c(1:3)]
VarIPCMarzo = (IPCaux["01/03/15"]-IPCaux["01/02/15"])/IPCaux["01/02/15"]
VarIPCAbril = (IPCaux["01/04/15"]-IPCaux["01/03/15"])/IPCaux["01/03/15"]
VarIPC = c("VarMarzo" = VarIPCMarzo, "VarAbril"=VarIPCAbril)
return(VarIPCMarzo)
}
apply(X=IPCprod,MARGIN = 1,FUN = VarPorcent)
IPCaux["01/03/15"]
IPCaux["01/02/15"]
(IPCaux["01/03/15"]-IPCaux["01/02/15"])/IPCaux["01/02/15"]
(IPCaux["01/04/15"]-IPCaux["01/03/15"])/IPCaux["01/03/15"]
View(IPCprod)
#Clasificación -----------------------------
IPC = IPCprod
# Prod = IPCi[1]
# ProdAbr = IPCi[2]
IPCaux = IPC[-c(1:3)]
IPCaux
(IPCaux["01/03/15"]-IPCaux["01/02/15"])/IPCaux["01/02/15"]
(IPCaux["01/04/15"]-IPCaux["01/03/15"])/IPCaux["01/03/15"]
VarIPCMarzo = (IPCaux["01/03/15"]-IPCaux["01/02/15"])/IPCaux["01/02/15"]
VarIPCAbril = (IPCaux["01/04/15"]-IPCaux["01/03/15"])/IPCaux["01/03/15"]
VarIPCMarzo
View(IPCprod)
IPCprod[,1:3]
VarIPC = data.frame(IPCprod[,1:3],VarIPCMarzo,VarIPCAbril)
#Clasificación -----------------------------
IPC = IPCprod
VarPorcent = function(IPC){
# Prod = IPCi[1]
# ProdAbr = IPCi[2]
IPCaux = IPC[-c(1:3)]
VarIPCMarzo = (IPCaux["01/03/15"]-IPCaux["01/02/15"])/IPCaux["01/02/15"]
VarIPCAbril = (IPCaux["01/04/15"]-IPCaux["01/03/15"])/IPCaux["01/03/15"]
VarIPC = data.frame(IPCprod[,1:3],VarIPCMarzo,VarIPCAbril)
return(VarIPC)
}
VarPorcent(IPCprod)
names(VarIPCAbril)
names(VarIPC)
VarPorcent = function(IPC){
# Prod = IPCi[1]
# ProdAbr = IPCi[2]
IPCaux = IPC[-c(1:3)]
VarIPCMarzo = (IPCaux["01/03/15"]-IPCaux["01/02/15"])/IPCaux["01/02/15"]
VarIPCAbril = (IPCaux["01/04/15"]-IPCaux["01/03/15"])/IPCaux["01/03/15"]
VarIPC = data.frame(IPCprod[,1:3],VarIPCMarzo,VarIPCAbril)
names(VarIPC)[4:5] = c("01/03/15","01/04/15")
return(VarIPC)
}
VarPorcent(IPCprod)
VarIPC = VarIPC %>% arrange(`01/03/15`)
VarIPC
names(VarIPC)[4:5] = c("01/03/15","01/04/15")
VarIPC = VarIPC %>% arrange(`01/03/15`)
VarIPC
VarIPC = VarIPC %>% arrange(desc(`01/03/15`))
VarIPC
VarPorcent = function(IPC){
# Prod = IPCi[1]
# ProdAbr = IPCi[2]
IPCaux = IPC[-c(1:3)]
VarIPCMarzo = (IPCaux["01/03/15"]-IPCaux["01/02/15"])/IPCaux["01/02/15"]
VarIPCAbril = (IPCaux["01/04/15"]-IPCaux["01/03/15"])/IPCaux["01/03/15"]
VarIPC = data.frame(IPCprod[,1:3],VarIPCMarzo,VarIPCAbril)
names(VarIPC)[4:5] = c("01/03/15","01/04/15")
VarIPC = VarIPC %>% arrange(desc(`01/03/15`))
return(VarIPC)
}
VarPorcent(IPCprod)
IPCsaltos = VarPorcent(IPCprod)
View(IPCsaltos)
IPCsaltos = IPCsaltos[1:10,]
#Grafico de Series   -----------------------
graf_series = function(IPC,ind = NULL,fecha = fecha0){
if(is.null(ind)){
aux = IPC[,-1]
}else{
aux = IPC[,ind]
}
aux = ts(aux,start = fecha[c(2,1)] , frequency = 12)
graf=dygraph(data = aux, main = "IPC Productos")%>%
# dyAxis("x", label=names(metric)) %>%
# dyAxis('y',label='')%>%
dyHighlight(highlightSeriesBackgroundAlpha = 0.3)#%>%
# dyLegend(show= "follow",width = 400)
return(graf)
}
VarPorcent = function(IPC){
# Prod = IPCi[1]
# ProdAbr = IPCi[2]
IPCaux = IPC[-c(1:3)]
VarIPCFeb = (IPCaux["01/02/15"]-IPCaux["01/01/15"])/IPCaux["01/01/15"]
VarIPCMarzo = (IPCaux["01/03/15"]-IPCaux["01/02/15"])/IPCaux["01/02/15"]
VarIPCAbril = (IPCaux["01/04/15"]-IPCaux["01/03/15"])/IPCaux["01/03/15"]
VarIPC = data.frame(IPCprod[,1:3],VarIPCFeb,VarIPCMarzo,VarIPCAbril)
names(VarIPC)[4:5] = c("01/03/15","01/04/15")
VarIPC = VarIPC %>% arrange(desc(`01/03/15`))
return(VarIPC)
}
IPCsaltos = VarPorcent(IPCprod)
IPCsaltos
VarPorcent = function(IPC){
# Prod = IPCi[1]
# ProdAbr = IPCi[2]
IPCaux = IPC[-c(1:3)]
VarIPCFeb = (IPCaux["01/02/15"]-IPCaux["01/01/15"])/IPCaux["01/01/15"]
VarIPCMarzo = (IPCaux["01/03/15"]-IPCaux["01/02/15"])/IPCaux["01/02/15"]
VarIPCAbril = (IPCaux["01/04/15"]-IPCaux["01/03/15"])/IPCaux["01/03/15"]
VarIPC = data.frame(IPCprod[,1:3],VarIPCFeb,VarIPCMarzo,VarIPCAbril)
names(VarIPC)[4:5] = c("01/03/15","01/04/15")
VarIPC = VarIPC %>% arrange(desc(`01/02/15`),desc(`01/03/15`),desc(`01/03/15`))
return(VarIPC)
}
IPCsaltos = VarPorcent(IPCprod)
VarPorcent = function(IPC){
# Prod = IPCi[1]
# ProdAbr = IPCi[2]
IPCaux = IPC[-c(1:3)]
VarIPCFeb = (IPCaux["01/02/15"]-IPCaux["01/01/15"])/IPCaux["01/01/15"]
VarIPCMarzo = (IPCaux["01/03/15"]-IPCaux["01/02/15"])/IPCaux["01/02/15"]
VarIPCAbril = (IPCaux["01/04/15"]-IPCaux["01/03/15"])/IPCaux["01/03/15"]
VarIPC = data.frame(IPCprod[,1:3],VarIPCFeb,VarIPCMarzo,VarIPCAbril)
names(VarIPC)[4:5] = c("01/02/15","01/03/15","01/04/15")
VarIPC = VarIPC %>% arrange(desc(`01/02/15`),desc(`01/03/15`),desc(`01/03/15`))
return(VarIPC)
}
IPCsaltos = VarPorcent(IPCprod)
VarPorcent = function(IPC){
# Prod = IPCi[1]
# ProdAbr = IPCi[2]
IPCaux = IPC[-c(1:3)]
VarIPCFeb = (IPCaux["01/02/15"]-IPCaux["01/01/15"])/IPCaux["01/01/15"]
VarIPCMarzo = (IPCaux["01/03/15"]-IPCaux["01/02/15"])/IPCaux["01/02/15"]
VarIPCAbril = (IPCaux["01/04/15"]-IPCaux["01/03/15"])/IPCaux["01/03/15"]
VarIPC = data.frame(IPCprod[,1:3],VarIPCFeb,VarIPCMarzo,VarIPCAbril)
names(VarIPC)[4:6] = c("01/02/15","01/03/15","01/04/15")
VarIPC = VarIPC %>% arrange(desc(`01/02/15`),desc(`01/03/15`),desc(`01/03/15`))
return(VarIPC)
}
IPCsaltos = VarPorcent(IPCprod)
IPCsaltos
IPCsaltos = IPCsaltos[1:10,]
IPCsaltos
View(IPCprod)
IPCprodx = IPCprod
1:dim(IPCprodx)[1]
IPCprodx = IPCprod
IPCprodx$ID = 1:dim(IPCprodx)[1]
View(IPCprod)
IPCprodx %>% inner_join(IPCsaltos)
ind = IPCprodx %>% inner_join(IPCsaltos,by="Producto")
ind
ind = IPCprodx %>% inner_join(IPCsaltos,by="Producto") %>% select(ID)
ind
ind= ind$ID
#Grafico de Series   -----------------------
graf_series = function(IPC,ind = NULL,fecha = fecha0){
if(is.null(ind)){
aux = IPC[,-1]
}else{
aux = IPC[,ind]
}
aux = ts(aux,start = fecha[c(2,1)] , frequency = 12)
graf=dygraph(data = aux, main = "IPC Productos")%>%
# dyAxis("x", label=names(metric)) %>%
# dyAxis('y',label='')%>%
dyHighlight(highlightSeriesBackgroundAlpha = 0.3)#%>%
# dyLegend(show= "follow",width = 400)
return(graf)
}
View(IPCprod)
graf_series(IPCprod,ind,fecha = c(1,2005))
View(IPCprod)
IPC = t(as.matrix(IPCprod[,-c(1:3)]))
IPC = ts(IPC, start = c(2005, 1),frequency = 12)
graf_series(IPC,ind,fecha = c(1,2005))
IPC
View(IPC)
items = IPCprod$Abrebiatura
colnames(IPC) = items
graf_series(IPC,ind,fecha = c(1,2005))
items = IPCprod$Producto
colnames(IPC) = items
graf_series(IPC,ind,fecha = c(1,2005))
VarPorcent = function(IPC){
# Prod = IPCi[1]
# ProdAbr = IPCi[2]
IPCaux = IPC[-c(1:3)]
VarIPCFeb = (IPCaux["01/02/15"]-IPCaux["01/11/14"])/IPCaux["01/11/14"]
VarIPCMarzo = (IPCaux["01/03/15"]-IPCaux["01/12/14"])/IPCaux["01/12/14"]
VarIPCAbril = (IPCaux["01/04/15"]-IPCaux["01/01/15"])/IPCaux["01/01/15"]
VarIPC = data.frame(IPCprod[,1:3],VarIPCFeb,VarIPCMarzo,VarIPCAbril)
names(VarIPC)[4:6] = c("01/02/15","01/03/15","01/04/15")
VarIPC = VarIPC %>% arrange(desc(`01/02/15`),desc(`01/03/15`),desc(`01/03/15`))
return(VarIPC)
}
IPCsaltos = VarPorcent(IPCprod)
IPCsaltos = IPCsaltos[1:10,]
IPCprodx = IPCprod
IPCprodx$ID = 1:dim(IPCprodx)[1]
ind = IPCprodx %>% inner_join(IPCsaltos,by="Producto") %>% select(ID)
ind= ind$ID
#Grafico de Series   -----------------------
graf_series = function(IPC,ind = NULL,fecha = fecha0){
if(is.null(ind)){
aux = IPC[,-1]
}else{
aux = IPC[,ind]
}
aux = ts(aux,start = fecha[c(2,1)] , frequency = 12)
graf=dygraph(data = aux, main = "IPC Productos")%>%
# dyAxis("x", label=names(metric)) %>%
# dyAxis('y',label='')%>%
dyHighlight(highlightSeriesBackgroundAlpha = 0.3)#%>%
# dyLegend(show= "follow",width = 400)
return(graf)
}
items = IPCprod$Producto
IPC = t(as.matrix(IPCprod[,-c(1:3)]))
IPC = ts(IPC, start = c(2005, 1),frequency = 12)
colnames(IPC) = items
graf_series(IPC,ind,fecha = c(1,2005))
shiny::runApp('D:/OneDrive - Escuela Politécnica Nacional/PUCE/A. Investigaciones/PreciosConsumidor/Modelamiento/App Cluster IPC')
