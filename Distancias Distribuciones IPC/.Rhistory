s=abs(s)
s
enorm <- function(n) {
i=0
p=vector()
while (i<n) {
u=runif(2)
v1=2*u[1]-1
v2=2*u[2]-1
s=v1+v2
s=abs(s)
if(s<=1){
x1=v1*sqrt(-2*log(s)/s)
x2=v2*sqrt(-2*log(s)/s)
p=c(p,x1,x2)
i=i+1
}
}
return(p)
}
x=enorm(100)
hist(x)
log(exp(1))
enorm <- function(n) {
i=0
p=vector()
while (i<n) {
u=runif(2)
v1=2*u[1]-1
v2=2*u[2]-1
s=v1+v2
s=abs(s)
if(s<=1){
x1=v1*sqrt(-2*log(s)/s)
x2=v2*sqrt(-2*log(s)/s)
p=c(p,x1,x2)
i=i+1
}
}
return(p)
}
x=enorm(100)
hist(x)
enorm <- function(n) {
i=0
p=vector()
while (i<n) {
u=runif(1)
# v1=2*u[1]-1
# v2=2*u[2]-1
# s=v1+v2
# s=abs(s)
x1=cos(2*pi*u)*sqrt(-2*log(s))
x2=sin(2*pi*u)*sqrt(-2*log(s))
p=c(p,x1,x2)
i=i+1
}
}
return(p)
enorm <- function(n) {
i=0
p=vector()
while (i<n) {
u=runif(1)
# v1=2*u[1]-1
# v2=2*u[2]-1
# s=v1+v2
# s=abs(s)
x1=cos(2*pi*u)*sqrt(-2*log(s))
x2=sin(2*pi*u)*sqrt(-2*log(s))
p=c(p,x1,x2)
i=i+1
}
return(p)
}
x=enorm(100)
hist(x)
enorm <- function(n) {
i=0
p=vector()
while (i<n) {
u=runif(2)
# v1=2*u[1]-1
# v2=2*u[2]-1
# s=v1+v2
# s=abs(s)
x1=cos(2*pi*u)*sqrt(-2*log(u[1]))
x2=sin(2*pi*u)*sqrt(-2*log(u[2]))
p=c(p,x1,x2)
i=i+1
}
return(p)
}
x=enorm(100)
hist(x)
x=enorm(10000)
hist(x)
runif(2)
numeros_alet=function(x0,a,c,m,n){
p=x0
x=x0
for (i in 1:n) {
x=(a*x+c)%%m
p=c(p,x)
}
return(p)
}
<<nombre  >>=
x=rnorm(100)
plot(x)
@
x=rnorm(100)
plot(x)
x=rnorm(100)
plot(x)
cat thesis/main_file/bibliography.bib
touch thesis/main_file/bibliography.bib
touch thesis/main_file/main_file.Rnw
shiny::runApp('C:/Users/JAVIE/OneDrive/Escritorio/Distancias Distribuciones IPC')
shiny::runApp('C:/Users/JAVIE/OneDrive/Escritorio/Archivos de iie/git craken/PreciosConsumidor/Distancias Distribuciones IPC')
tablaperiodo=function(N=100,periodos){
etiquetas = c()
etiquetas1 = c()
for (i in 1:(length(periodos) - 1)) {
etiquetas[i] = paste0("Periodo: ", periodos[i], " - ", periodos[i + 1])
etiquetas1=c(etiquetas1;replicate(N,etiquetas[i]))
}
}
tablaperiodo=function(N=100,periodos){
etiquetas = c()
etiquetas1 = c()
for (i in 1:(length(periodos) - 1)) {
etiquetas[i] = paste0("Periodo: ", periodos[i], " - ", periodos[i + 1])
etiquetas1=c(etiquetas1;replicate(N,etiquetas[i]))
}
}
tablaperiodo=function(N=100,periodos){
etiquetas = c()
etiquetas1 = c()
for (i in 1:(length(periodos) - 1)) {
etiquetas[i] = paste0("Periodo: ", periodos[i], " - ", periodos[i + 1])
etiquetas1=c(etiquetas1,replicate(N,etiquetas[i]))
}
}
tablaperiodo(periodos = c(2010,2011,2012,2013))
x=tablaperiodo(periodos = c(2010,2011,2012,2013))
x
x=tablaperiodo(100,periodos = c(2010,2011,2012,2013))
periodos = c(2010,2011,2012,2013)
x=tablaperiodo(100,periodos)
x
tablaperiodo=function(N=100,periodos){
etiquetas = c()
etiquetas1 = c()
for (i in 1:(length(periodos) - 1)) {
etiquetas[i] = paste("Periodo: ", periodos[i], " - ", periodos[i + 1])
etiquetas1=c(etiquetas1,replicate(N,etiquetas[i]))
}
}
periodos = c(2010,2011,2012,2013)
x=tablaperiodo(100,periodos)
x
for (i in 1:(length(periodos) - 1)) {
etiquetas[i] = paste("Periodo: ", periodos[i], " - ", periodos[i + 1])
etiquetas1=c(etiquetas1,replicate(N,etiquetas[i]))
}
etiquetas = c()
etiquetas1 = c()
for (i in 1:(length(periodos) - 1)) {
etiquetas[i] = paste("Periodo: ", periodos[i], " - ", periodos[i + 1])
etiquetas1=c(etiquetas1,replicate(N,etiquetas[i]))
}
N=100
for (i in 1:(length(periodos) - 1)) {
etiquetas[i] = paste("Periodo: ", periodos[i], " - ", periodos[i + 1])
etiquetas1=c(etiquetas1,replicate(N,etiquetas[i]))
}
etiquetas
etiquetas1
tablaperiodo=function(N=100,periodos){
etiquetas = c()
etiquetas1 = c()
for (i in 1:(length(periodos) - 1)) {
etiquetas[i] = paste("Periodo: ", periodos[i], " - ", periodos[i + 1])
etiquetas1=c(etiquetas1,replicate(N,etiquetas[i]))
}
}
periodos = c(2010,2011,2012,2013)
x=tablaperiodo(100,periodos)
x
tablaperiodo=function(N=100,periodos){
etiquetas = c()
etiquetas1 = c()
for (i in 1:(length(periodos) - 1)) {
etiquetas[i] = paste("Periodo: ", periodos[i], " - ", periodos[i + 1])
etiquetas1=c(etiquetas1,replicate(N,etiquetas[i]))
}
}
etiquetas = c()
etiquetas1 = c()
for (i in 1:(length(periodos) - 1)) {
etiquetas[i] = paste("Periodo: ", periodos[i], " - ", periodos[i + 1])
etiquetas1=c(etiquetas1,replicate(N,etiquetas[i]))
}
periodos = c(2010,2011,2012,2013)
tablaperiodo=function(N=100,periodos){
etiquetas = c()
etiquetas1 = c()
for (i in 1:(length(periodos) - 1)) {
etiquetas[i] = paste("Periodo: ", periodos[i], " - ", periodos[i + 1])
etiquetas1=c(etiquetas1,replicate(N,etiquetas[i]))
}
}
periodos = c(2010,2011,2012,2013)
x=tablaperiodo(100,periodos)
x
periodos = c(2010,2011,2012,2013)
etiquetas = c()
etiquetas1 = c()
for (i in 1:(length(periodos) - 1)) {
etiquetas[i] = paste("Periodo: ", periodos[i], " - ", periodos[i + 1])
etiquetas1=c(etiquetas1,replicate(N,etiquetas[i]))
}
N=100
etiquetas = c()
etiquetas1 = c()
for (i in 1:(length(periodos) - 1)) {
etiquetas[i] = paste("Periodo: ", periodos[i], " - ", periodos[i + 1])
etiquetas1=c(etiquetas1,replicate(N,etiquetas[i]))
}
etiquetas
etiquetas1
N=10
etiquetas = c()
etiquetas1 = c()
for (i in 1:(length(periodos) - 1)) {
etiquetas[i] = paste("Periodo: ", periodos[i], " - ", periodos[i + 1])
etiquetas1=c(etiquetas1,replicate(N,etiquetas[i]))
}
etiquetas
etiquetas1
for (i in 1:(length(periodos) - 1)) {
etiquetas[i] = paste("Periodo: ", periodos[i], " - ", periodos[i + 1])
etiquetas1=c(etiquetas1,replicate(N,etiquetas[i]))
}
etiquetas
etiquetas1
tablaperiodo=function(N,periodos){
etiquetas = c()
etiquetas1 = c()
for (i in 1:(length(periodos) - 1)) {
etiquetas[i] = paste("Periodo: ", periodos[i], " - ", periodos[i + 1])
etiquetas1=c(etiquetas1,replicate(N,etiquetas[i]))
}
}
periodos = c(2010,2011,2012,2013)
x=tablaperiodo(100,periodos)
x
periodos = c(2010,2011,2012,2013)
x=tablaperiodo(100,periodos)
x
tablaperiodo=function(N,periodos){
etiquetas = c()
etiquetas1 = c()
for (i in 1:(length(periodos) - 1)) {
etiquetas[i] = paste("Periodo: ", periodos[i], " - ", periodos[i + 1])
etiquetas1=c(etiquetas1,replicate(N,etiquetas[i]))
}
return(etiquetas1)
}
periodos = c(2010,2011,2012,2013)
x=tablaperiodo(100,periodos)
x
Betasdensidad=function(Betas,N){
x=c()
for (i in 1:length(Betas)) {
x=c(x,simulador(n,betas$mu[i],Betas$sig[i]))
}
return(x)
}
simulador=function(N,mu,sig){
x=rnorm(N,mu,sig)
return(x)
}
Betasdensidad=function(Betas,N){
x=c()
for (i in 1:length(Betas)) {
x=c(x,simulador(n,betas$mu[i],Betas$sig[i]))
}
return(x)
}
Betasdensidad=function(Betas,N){
x=c()
for (i in 1:length(Betas)) {
x=c(x,simulador(n,betas$mu[i],Betas$sig[i]))
}
y=tablaperiodo(N,periodos)
x= data.frame(round(xtable(cbind(x,y)),digits = 5))
return(x)
}
#>> Carga de Datos -----------------------------------------------
IPC = read_csv("Data/IPChistoricoTrn.csv")
productos = names(IPC)[-1]
ProductosLista = 1:length(productos)
names(ProductosLista) = productos
IPC = data.frame(IPC)
setwd("C:/Users/JAVIE/OneDrive/Escritorio/Archivos de iie/git craken/PreciosConsumidor/Distancias Distribuciones IPC")
#>> Carga de Datos -----------------------------------------------
IPC = read_csv("Data/IPChistoricoTrn.csv")
productos = names(IPC)[-1]
ProductosLista = 1:length(productos)
names(ProductosLista) = productos
IPC = data.frame(IPC)
names(IPC) = c("Fecha", productos)
# periodos = c(2005, 2007, 2010, 2014, 2019)
PeriodoLista = 2006:2018
names(PeriodoLista) = paste("Año:",PeriodoLista)
periodos = c(2005, 2007, 2010, 2014, 2019)
#Tipo de Estandarizacion (Deflactar)
TipoDeflactor = c("MM12(IPC General)" = 1, "MM12(Serie Original)" = 2)
#-------------------------------------------
source(file ="Code/MedMovil.R" ,local = TRUE)
ui <- navbarPage(title = "Distancias K-S",
header = tags$h3("Header-Plataforma",tags$head(tags$link(rel='shortcut icon',
href='puce.ico',
type='image/x-icon'))),
position = "fixed-top",theme=shinytheme('yeti'),#theme = 'estilo.css',
footer = fluidRow(column(12,img(src='puce_logo.png',width='90px',align='center'),
tags$b('Proyecto: '),' "Análisis del Poder de Mercado (Series IPC)".' ,
'-',tags$a('Instituto de Investigaciones Económicas - PUCE (2018)',href='https://www.puce.edu.ec'),
tags$b('  ||  '),tags$b('Desarrollado por: '),
tags$a('Cristian Pachacama',href='http://www.linkedin.com/in/cristian-david-pachacama')
)
),
#INTRODUCCION E INFORMACION DEL PROYECTO ---------------------------
tabPanel('Introducción',icon=icon('home'),
fluidRow(
sidebarPanel(img(src='puce_logo2.png',width='90%',align='center' ),
fluidRow(' '),
hr(),
fluidRow(
column(3,tags$b('Proyecto:')),column(1),
column(8,'Análisis del Poder de Mercado (Series IPC)')
),hr(),
fluidRow(
column(3,tags$b('Linea de Investigación:')),column(1),
column(8,'Econometría')
),hr(),
fluidRow(
column(3,tags$b('Unidad:')),column(1),
column(8,'Instituto de Investigaciones Económicas')
),hr(),
fluidRow(
column(3,tags$b('Director:')),column(1),
column(8,'PhD. Pedro Páez')
),hr(),
fluidRow(
column(3,tags$b('Researcher:')),column(1),
column(8,'Cristian Pachacama')
)
),
mainPanel(
h3('Análisis del Poder de Mercado (Series IPC)'),
hr(),h4('Resume:'),
fluidRow(' '),
p('Para el anális se considera el Índice de Precios al
Consumidor de todos los bienes de la canasta básica
familiar (series mensuales de los últimos 13 años).
Podemos encontrar las series de los siguientes 116 productos.
Se procedió a realizar el análisis Clúster de las series
asociadas a estos productos, para el análisis se consideraron
varias métricas, entre las que se destacan las que consideran la correlación
tanto temporal como entre distintas series.')#,
# fluidRow(dataTableOutput("tabla_prod"))
)
),hr()
),
#INFORMACIÓN DE LA BASE DE DATOS ------------------------------
# tabPanel("Datos"
#
#            ),
# ANALISIS MULTIVARIANTE DE SERIES ============================
tabPanel('Análisis',
fluidRow(
# Panel Lateral -------------------------------
sidebarPanel(width = 3,
h4('Panel Control Graficos'),
selectInput('tipoAnalisis',
label= 'Selecciona Tipo de Análisis',
selected = 1,
choices=c("IPC sin deflactar"=1,
"IPC deflactado"=2,
"IPC Deflactado, periodos de corte"=3,
"IPC producto, fijado periodo"=4)
),
selectInput('producto',
label= 'Selecciona Producto',
selected = 2,
choices=ProductosLista),
# radioButtons("deflactor",
#              label = "Elije Deflactor",
#              choices = TipoDeflactor,
#              selected = 1),
checkboxGroupInput("periodos",
label = "Eligir Periodos de Corte",
choices = PeriodoLista,
selected = c(2007,2010,2015))
),
# Panel Central ------------------------------------
mainPanel(
h3('Distribución del IPC Deflactado'),
h4(textOutput('productNombre')),hr(),
plotOutput('graficoDist',height = "530px",width = '110%'),
h4('Resumen del Modelo'),
DTOutput('resumenRegres')
)
),hr()
)
)
#------------------------------------------------------------
#!!!!!!!!!!!!!!!!!!!  GRAFICAS INDIVIDUALES 3  !!!!!!!!!!!!!!
#------------------------------------------------------------
# Graficos del IPC Deflactado, Regresion Panel
anhos=function(periodos){
periodos[2:length(periodos)]=periodos[2:length(periodos)]+1
periodos=paste0("01-06-",periodos)
periodos=as.Date(periodos,format = "%d-%m-%Y")
return(periodos[1:length(periodos)-1])
}
perd=anhos(periodos)
BDDgraf1 = BDDgraf
# k = as.numeric(input$producto)
k=1
#Producto
# k = as.numeric(input$producto)
k=1
IPC = read_csv("Data/IPChistoricoTrn.csv")
productos = names(IPC)[-1]
ProductosLista = 1:length(productos)
names(ProductosLista) = productos
IPC = data.frame(IPC)
names(IPC) = c("Fecha", productos)
Fecha = as.Date(IPC$Fecha, format = "%d-%m-%y")
BDDgraf = data.frame(Fecha, SerieOrig =  IPC[,k+1])
BDDgraf1 = BDDgraf
deflactAux = "MM12(IPC General)"
resumen = data.frame(round(xtable(summary(modelo1)),digits = 5))
names(resumen) = c("Estimación","Error Estándar","t-valor","Pr(>|t|)")
#Quitado del UI la opcion de eleccion del deflactor!!
mav12 = MedMovBeta(IPC$GENERAL,n=12)
SerieStnd = as.numeric( IPC[,k+1] / mav12$mvxRecup)
# Serie = mav12Gen$resxRecup
Fecha = as.Date(IPC$Fecha, format = "%d-%m-%y")
Anio = as.numeric(format(Fecha, "%Y"))
etiquetas = c()
for (i in 1:(length(periodos) - 1)) {
etiquetas[i] = paste0("Periodo: ", periodos[i], " - ", periodos[i + 1])
}
PeriodoCorte = cut(Anio,
breaks = periodos ,
labels = etiquetas ,
right = F)
BDDgraf = data.frame(Fecha, SerieStnd , SerieOrig =  IPC[,k+1], IPC_GeneralS = mav12$mvxRecup , PeriodoCorte)
MediaSeries = BDDgraf %>% group_by(PeriodoCorte) %>% summarise(Media = mean (SerieStnd))
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#Regresion: Modelo de Efectos Fijos -------------
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
BDDpanel = BDDgraf[,c("Fecha","SerieStnd","PeriodoCorte")]
BDDpanel$Tmp = 1:dim(BDDpanel)[1]
modelo1 = lm(data = BDDpanel, formula = SerieStnd ~ Tmp + PeriodoCorte*Tmp)
predicted = data.frame(Tmp=BDDpanel$Tmp, PeriodoCorte=BDDpanel$PeriodoCorte)
IPCfit = forecast(modelo1,predicted)
predicted$IPCfit = as.numeric(IPCfit$mean)
predicted$Fecha = BDDgraf$Fecha
BDDgraf1 = BDDgraf
deflactAux = "MM12(IPC General)"
resumen = data.frame(round(xtable(summary(modelo1)),digits = 5))
names(resumen) = c("Estimación","Error Estándar","t-valor","Pr(>|t|)")
Pval = as.numeric(summary(modelo1)$coefficients[,4])
rangos = cut(Pval,breaks = c(0,0.001,0.01,0.05,0.1,1),
labels = c("***","**","*","."," "))
resumen$Signif = rangos
x=startsWith(rownames(resumen),"Tmp")
betas=resumen$Estimación[x]
betas
betas=resumen[x]
betas=resumen[x,]
betas
confint.lm(modelo1)
lm
y=confint.lm(modelo1)[x,]
y
y[1]
resumentmp
resumentmp=resumen$Estimación[x,]
x=startsWith(rownames(resumen),"Tmp")
resumentmp
resumentmp=resumen$Estimación[x]
y=confint.lm(modelo1)[x,]
y
resumentmp=resumen[x,]
resumentmp
(y[1]-resumentmp[1])/resumentmp$t-valor
resumentmp[1,3]
(y[1]-resumentmp[1])/resumentmp[1,3]
(y[1]+resumentmp[1])/resumentmp[1,3]
y[1]
resumentmp[1]
y
(y[1,1]+resumentmp[1,1])/resumentmp[1,3]
(y[1,1]-y[1,2])/2
(y[1,1]-y[1,2])/4
