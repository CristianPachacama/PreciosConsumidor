x=numeros_alet(10,7,19,12,100)
plot(x)
hist(x)
x=(a*x)%%m
numeros_alet=function(x0,a,m,n){
p=vector()
x=x0
for (i in 1:n) {
x0=x
x=(a*x)%%m
p=c(p,x)
}
return(p)
}
x=numeros_alet(10,65539,222225446465,100)
hist(x)
x=numeros_alet(10,65539,222225446465,10000)
hist(x)
x=numeros_alet(10,65539,222225446465,100000)
hist(x)
x=numeros_alet(10,65539,2^31,100000)
hist(x)
x=numeros_alet(10,65539,2^31,100)
hist(x)
numeros_alet=function(x0,a,m,n){
p=vector()
x=x0
for (i in 1:n) {
x=(a*x)%%m
p=c(p,x)
}
return(p)
}
x=numeros_alet(10,65539,2^31,100)
hist(x)
numeros_alet=function(x0,a,m,n){
p=x0
x=x0
for (i in 1:n) {
x=(a*x)%%m
p=c(p,x)
}
return(p)
}
x=numeros_alet(10,65539,2^31,100)
hist(x)
x=numeros_alet(10,65539,2^31,1000)
hist(x)
x=numeros_alet(10,65539,2^31,10000)
x=numeros_alet(10,65539,2^31,100000)
hist(x)
x=numeros_alet(10,65539,2^31,1000)
hist(x)
x=numeros_alet(3,65539,2^31,1000)
hist(x)
x=numeros_alet(7,65539,2^31,1000)
hist(x)
x=numeros_alet(100,65539,2^31,1000)
hist(x)
x=numeros_alet(100,7^5,0,2^31,1000)
hist(x)
numeros_alet=function(x0,a,,c,m,n){
p=x0
x=x0
for (i in 1:n) {
x=(a*x+c)%%m
p=c(p,x)
}
return(p)
}
x=numeros_alet(100,7^5,0,2^31,1000)
hist(x)
numeros_alet=function(x0,a,,c,m,n){
p=x0
x=x0
for (i in 1:n) {
x=(a*x+c)%%m
p=c(p,x)
}
return(p)
}
numeros_alet=function(x0,a,,c,m,n){
p=x0
x=x0
for (i in 1:n) {
x=(a*x+c)%%m
p=c(p,x)
}
return(p)
}
numeros_alet=function(x0,a,c,m,n){
p=x0
x=x0
for (i in 1:n) {
x=(a*x+c)%%m
p=c(p,x)
}
return(p)
}
x=numeros_alet(100,7^5,0,2^31,1000)
hist(x)
x=numeros_alet(100,7^5,0,2^31-1,100)
hist(x)
x=numeros_alet(100,7^5,0,2^31-1,1000)
hist(x)
x=numeros_alet(100,7^5,0,2^31-1,10000)
hist(x)
x=numeros_alet(100,7^5,0,2^31-1,5000)
hist(x)
runif(100)
plot(y)
y=runif(100)
plot(y)
hist(y)
y=runif(1000)
hist(y)
y=runif(10000)
hist(y)
mean(x)
x=x/2^31-1
hist(x)
mean(x)
hist(x)
mean(x)
x=numeros_alet(100,7^5,0,2^31-1,5000)
x=x/2^31-1
mean(x)
x1=x/2^31-1
x=numeros_alet(100,7^5,0,2^31-1,5000)
x1=x/2^31-1
mean(x)
hist(x)
x=numeros_alet(100,7^5,0,2^31-1,5000)
x1=x/2^31-1
mean(x)
hist(x)
y=runif(10000)
hist(y)
mean(x)
hist(x)
y=runif(10000)
x=numeros_alet(100,7^5,0,2^31-1,5000)
x1=x/2^31-1
mean(x)
mean(x1)
hist(x)
x=numeros_alet(100,7^5,0,2^31-1,5000)
x1=x/2^31-1
mean(x1)
hist(x1)
x=numeros_alet(100,7^5,0,2^31-1,5000)
x>0
x1=x/2^31-1
x1>0
x1=x/(2^31-1)
x1>0
x=numeros_alet(100,7^5,0,2^31-1,5000)
x>0
x1=x/(2^31-1)
x1>0
mean(x1)
hist(x1)
hist(x1)
x=numeros_alet(100,7^5,0,2^31-1,5000)
x>0
x1=x/(2^31-1)
x1>0
mean(x1)
hist(x1)
y=runif(10000)
y=runif(10000)
hist(y)
x=numeros_alet(100,7^5,0,2^31-1,5000)
x1=x/(2^31-1)
x1>0
mean(x1)
hist(x1)
x=numeros_alet(100,7^5,0,2^31-1,10000)
x1=x/(2^31-1)
x1>0
mean(x1)
hist(x1)
y=runif(10000)
hist(y)
var(x1)
1/12
eunif=function(n){
x=numeros_alet(100,7^5,0,2^31-1,10000)
x1=x/(2^31-1)
return(x1)
}
eunif=function(x0,n){
x=numeros_alet(x0,7^5,0,2^31-1,10000)
x1=x/(2^31-1)
return(x1)
}
q=eunif(18,2)
u=runif(2)
runif(2)
runif(2)
runif(2)
enorm <- function(n) {
i=0
p=vector()
while (i<n) {
u=runif(2)
v1=2*u[1]
v2=2*u[2]
s=v1+v2
if(s<=1){
x1=v1*sqrt(-2*ln(s)/s)
x2=v2*sqrt(-2*ln(s)/s)
p=c(p,x1,x2)
i=i+1
}
}
return(p)
}
enorm(100)
enorm <- function(n) {
i=0
p=vector()
while (i<n) {
u=runif(2)
v1=2*u[1]
v2=2*u[2]
s=v1+v2
if(s<=1){
x1=v1*sqrt(-2*log(s)/s)
x2=v2*sqrt(-2*log(s)/s)
p=c(p,x1,x2)
i=i+1
}
}
return(p)
}
enorm(100)
hist(x)
hist(x)
x=enorm(100)
hist(x)
enorm <- function(n) {
i=0
p=vector()
while (i<n) {
u=runif(2)
v1=2*u[1]-1
v2=2*u[2]-1
s=v1+v2
if(s<=1){
x1=v1*sqrt(-2*log(s)/s)
x2=v2*sqrt(-2*log(s)/s)
p=c(p,x1,x2)
i=i+1
}
}
return(p)
}
x=enorm(100)
hist(x)
x=enorm(10000)
hist(x)
x=enorm(10000)
warnings()
enorm <- function(n) {
i=0
p=vector()
while (i<n) {
u=runif(2)
v1=2*u[1]-1
v2=2*u[2]-1
s=v1+v2
if(s<=1){
x1=v1*sqrt(-2*log(s)/s)
x2=v2*sqrt(-2*log(s)/s)
p=c(p,x1,x2)
i=i+1
}
}
return(p)
}
x=enorm(10000)
u=runif(2)
v1=2*u[1]-1
v2=2*u[2]-1
v1
v2
s=v1+v2
s
x1=v1*sqrt(-2*log(s)/s)
enorm <- function(n) {
i=0
p=vector()
while (i<n) {
u=runif(2)
v1=2*u[1]-1
v2=2*u[2]-1
s=v1+v2
s=abs(s)
if(s<=1){
x1=v1*sqrt(-2*log(s)/s)
x2=v2*sqrt(-2*log(s)/s)
p=c(p,x1,x2)
i=i+1
}
}
return(p)
}
x=enorm(10000)
hist(x)
s
s=v1+v2
s=abs(s)
s
enorm <- function(n) {
i=0
p=vector()
while (i<n) {
u=runif(2)
v1=2*u[1]-1
v2=2*u[2]-1
s=v1+v2
s=abs(s)
if(s<=1){
x1=v1*sqrt(-2*log(s)/s)
x2=v2*sqrt(-2*log(s)/s)
p=c(p,x1,x2)
i=i+1
}
}
return(p)
}
x=enorm(100)
hist(x)
log(exp(1))
enorm <- function(n) {
i=0
p=vector()
while (i<n) {
u=runif(2)
v1=2*u[1]-1
v2=2*u[2]-1
s=v1+v2
s=abs(s)
if(s<=1){
x1=v1*sqrt(-2*log(s)/s)
x2=v2*sqrt(-2*log(s)/s)
p=c(p,x1,x2)
i=i+1
}
}
return(p)
}
x=enorm(100)
hist(x)
enorm <- function(n) {
i=0
p=vector()
while (i<n) {
u=runif(1)
# v1=2*u[1]-1
# v2=2*u[2]-1
# s=v1+v2
# s=abs(s)
x1=cos(2*pi*u)*sqrt(-2*log(s))
x2=sin(2*pi*u)*sqrt(-2*log(s))
p=c(p,x1,x2)
i=i+1
}
}
return(p)
enorm <- function(n) {
i=0
p=vector()
while (i<n) {
u=runif(1)
# v1=2*u[1]-1
# v2=2*u[2]-1
# s=v1+v2
# s=abs(s)
x1=cos(2*pi*u)*sqrt(-2*log(s))
x2=sin(2*pi*u)*sqrt(-2*log(s))
p=c(p,x1,x2)
i=i+1
}
return(p)
}
x=enorm(100)
hist(x)
enorm <- function(n) {
i=0
p=vector()
while (i<n) {
u=runif(2)
# v1=2*u[1]-1
# v2=2*u[2]-1
# s=v1+v2
# s=abs(s)
x1=cos(2*pi*u)*sqrt(-2*log(u[1]))
x2=sin(2*pi*u)*sqrt(-2*log(u[2]))
p=c(p,x1,x2)
i=i+1
}
return(p)
}
x=enorm(100)
hist(x)
x=enorm(10000)
hist(x)
runif(2)
numeros_alet=function(x0,a,c,m,n){
p=x0
x=x0
for (i in 1:n) {
x=(a*x+c)%%m
p=c(p,x)
}
return(p)
}
<<nombre  >>=
x=rnorm(100)
plot(x)
@
x=rnorm(100)
plot(x)
x=rnorm(100)
plot(x)
cat thesis/main_file/bibliography.bib
touch thesis/main_file/bibliography.bib
touch thesis/main_file/main_file.Rnw
shiny::runApp('C:/Users/JAVIE/OneDrive/Escritorio/Distancias Distribuciones IPC')
shiny::runApp('C:/Users/JAVIE/OneDrive/Escritorio/Archivos de iie/git craken/PreciosConsumidor/Distancias Distribuciones IPC')
#Producto
k = as.numeric(input$producto)
#Producto
# k = as.numeric(input$producto)
k=1
IPC = read_csv("Data/IPChistoricoTrn.csv")
productos = names(IPC)[-1]
ProductosLista = 1:length(productos)
names(ProductosLista) = productos
IPC = data.frame(IPC)
IPC = read_csv("Data/IPChistoricoTrn.csv")
setwd("C:/Users/JAVIE/OneDrive/Escritorio/Archivos de iie/git craken/PreciosConsumidor/Distancias Distribuciones IPC")
productos = names(IPC)[-1]
IPC = read_csv("Data/IPChistoricoTrn.csv")
productos = names(IPC)[-1]
ProductosLista = 1:length(productos)
names(ProductosLista) = productos
IPC = data.frame(IPC)
names(IPC) = c("Fecha", productos)
Fecha = as.Date(IPC$Fecha, format = "%d-%m-%y")
BDDgraf = data.frame(Fecha, SerieOrig =  IPC[,k+1])
#Datos IPC producto k
IPCp=IPC[,k+1]
temp=1:length(IPCp)
modelo1=lm(IPCp~temp)
summary(modelo1)
#------------------------------------------------------------
#!!!!!!!!!!!!!!!!!!!  GRAFICAS INDIVIDUALES 1  !!!!!!!!!!!!!!
#------------------------------------------------------------
# Graficos del IPC sin deflactar, Regresion Simple
graf=ggplot(data = BDDgraf, aes(x = Fecha, y = SerieOrig)) +
geom_line(size = 0.7,colour = "red4") +
ggtitle("Diagrama de dispersi贸n") +
geom_smooth(method = "lm", color = "blue") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))+
labs(title = paste("IPC:", productos[k]) , y = "IPC")
graf
runApp()
IPC = read_csv("Data/IPChistoricoTrn.csv")
runApp()
runApp()
#------------------------------------------------------------
#!!!!!!!!!!!!!!!!!!!  GRAFICAS INDIVIDUALES 1  !!!!!!!!!!!!!!
#------------------------------------------------------------
# Graficos del IPC sin deflactar, Regresion Simple
graf=ggplot(data = BDDgraf, aes(x = Fecha, y = SerieOrig)) +
geom_line(size = 0.7,colour = "red4") +
ggtitle("Diagrama de dispersi贸n") +
geom_smooth(method = "lm", color = "blue")
#------------------------------------------------------------
#!!!!!!!!!!!!!!!!!!!  GRAFICAS INDIVIDUALES 1  !!!!!!!!!!!!!!
#------------------------------------------------------------
# Graficos del IPC sin deflactar, Regresion Simple
graf=ggplot(data = BDDgraf, aes(x = Fecha, y = SerieOrig)) +
geom_line(size = 0.7,colour = "red4") +
ggtitle("Diagrama de dispersi贸n") +
geom_smooth(method = "lm", color = "blue")
graf
#------------------------------------------------------------
#!!!!!!!!!!!!!!!!!!!  GRAFICAS INDIVIDUALES 1  !!!!!!!!!!!!!!
#------------------------------------------------------------
# Graficos del IPC sin deflactar, Regresion Simple
graf=ggplot(data = BDDgraf, aes(x = Fecha, y = SerieOrig)) +
geom_line(size = 0.7,colour = "red4") +
ggtitle("Diagrama de dispersi贸n") +
geom_smooth(method = "lm", color = "blue") +
theme(plot.title = element_text(hjust = 0.5))+
labs(title = paste("IPC:", productos[k]) , y = "IPC")
graf
runApp()
runApp()
runApp()
runApp()
33*99
37*99
11*99
99*99
17*99
runApp()
