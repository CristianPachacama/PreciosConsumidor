set.seed(1)
#Funcion de Distribucion Empirica de los Datos (Xi)
DistribEmpirica = function(Lista_Xi,x=Lista_Xi){
Lista_Xi = Lista_Xi[!is.na(Lista_Xi)]
Distrib = c()
for(i in 1:length(x)){
Indicatriz = as.numeric(Lista_Xi <= x[i])
Distrib[i] = mean(Indicatriz, na.rm = TRUE)
}
return(Distrib)
}
#Simulacion a Partir de Distribucion Empirica
rEmpirica = function(Lista_Xi,n=1){
Lista_Xi = Lista_Xi[!is.na(Lista_Xi)]
if(n>0){
u =runif(n)
xsim=c()
for(k in 1:n){
xsim[k] = min(Lista_Xi[u[k]<=DistribEmpirica(Lista_Xi)],na.rm = TRUE)
}
}else{
xsim = NA
print("Ingrese un n adecuado")
}
return(xsim)
}
#Algoritmo Medias Moviles
mvx = stats::filter(x, rep(1 / n, n), sides = 2)
resx = x - mvx
resxRecup = resx
resxRecup[is.na(resxRecup)] = rEmpirica(Lista_Xi = resx, n = sum(is.na(resx)))
mvxRecup = x - resxRecup
par(mfrow = c(2, 1))
plot(x, main = paste0("IPC, Media Movil [",n,"]"),type = "l", ylab = "IPC")
lines(mvxRecup,col= "red")
lines(mvx , col = "blue")
plot(resxRecup, ylab = "Residuos", main = "Residuos",col="red")
lines(resx)
return(data.frame(x,mvx,resx,mvxRecup,resxRecup))
}
#Media Movil del IPC GENERAL
mav12Gen = MedMovBeta(x = IPC$GENERAL , n = 12 )
k=2
periodos = c(2005, 2009, 2013, 2015, 2019)
SerieStnd = IPC[,k+1] / mav12Gen$mvxRecup
# Serie = mav12Gen$resxRecup
Fecha = as.Date(IPC$Fecha, format = "%d-%m-%y")
Anio = as.numeric(format(Fecha, "%Y"))
etiquetas = c()
for (i in 1:(length(periodos) - 1)) {
etiquetas[i] = paste0("Periodo: ", periodos[i], " - ", periodos[i + 1])
}
PeriodoCorte = cut(Anio,
breaks = periodos ,
labels = etiquetas ,
right = F)
SerieStand = data.frame(Fecha, SerieStnd , SerieOrig =  IPC[,k+1]   , PeriodoCorte)
MediaSeries = SerieStnd %>% group_by(PeriodoCorte) %>% summarise(Media = mean (Serie))
densidades = ggplot(data = SerieStand , aes(x = SerieStnd, fill = PeriodoCorte, colour =
PeriodoCorte)) +  geom_density(alpha = 0.2) +
ggtitle( paste("IPC:",productos[k]) ) +
geom_vline(data = MediaSeries,
aes(xintercept = Media, color = PeriodoCorte),
linetype = "dashed")
library(dplyr)
MediaSeries = SerieStnd %>% group_by(PeriodoCorte) %>% summarise(Media = mean (Serie))
SerieStand
Anio
SerieStand = data.frame(Fecha, SerieStnd , SerieOrig =  IPC[,k+1]   , PeriodoCorte)
str(SerieStand)
SerieStnd
SerieStnd = as.numeric( IPC[,k+1] / mav12Gen$mvxRecup)
SerieStnd
# Serie = mav12Gen$resxRecup
Fecha = as.Date(IPC$Fecha, format = "%d-%m-%y")
Anio = as.numeric(format(Fecha, "%Y"))
etiquetas = c()
for (i in 1:(length(periodos) - 1)) {
etiquetas[i] = paste0("Periodo: ", periodos[i], " - ", periodos[i + 1])
}
PeriodoCorte = cut(Anio,
breaks = periodos ,
labels = etiquetas ,
right = F)
SerieStand = data.frame(Fecha, SerieStnd , SerieOrig =  IPC[,k+1]   , PeriodoCorte)
MediaSeries = SerieStnd %>% group_by(PeriodoCorte) %>% summarise(Media = mean (Serie))
PeriodoCorte
SerieStand
str(SerieStand)
MediaSeries = SerieStand %>% group_by(PeriodoCorte) %>% summarise(Media = mean (Serie))
MediaSeries = SerieStand %>% group_by(PeriodoCorte) %>% summarise(Media = mean (SerieStnd))
densidades = ggplot(data = SerieStand , aes(x = SerieStnd, fill = PeriodoCorte, colour =
PeriodoCorte)) +  geom_density(alpha = 0.2) +
ggtitle( paste("IPC:",productos[k]) ) +
geom_vline(data = MediaSeries,
aes(xintercept = Media, color = PeriodoCorte),
linetype = "dashed")
densidades
BDDgraf = data.frame(Fecha, SerieStnd , SerieOrig =  IPC[,k+1]   , PeriodoCorte)
MediaSeries = BDDgraf %>% group_by(PeriodoCorte) %>% summarise(Media = mean (SerieStnd))
densidades = ggplot(data = BDDgraf , aes(x = SerieStnd, fill = PeriodoCorte, colour =
PeriodoCorte)) +  geom_density(alpha = 0.2) +
ggtitle( paste("IPC:",productos[k]) ) +
geom_vline(data = MediaSeries,
aes(xintercept = Media, color = PeriodoCorte),
linetype = "dashed")
seriegraf =  ggplot(data = BDDgraf, aes(x = Fecha, y = SerieStnd)) +
geom_line(size = 1)
seriegraf
seriegraf =  ggplot(data = BDDgraf, aes(x = Fecha, y = SerieStnd)) +
geom_line(size = 0.7)
seriegraf
seriegraf =  ggplot(data = BDDgraf, aes(x = Fecha, y = SerieStnd)) +
geom_line(size = 0.7) + labs(y = "IPC Deflactado (por IPC General Suavizado)")
seriegraf
seriegraf =  ggplot(data = BDDgraf, aes(x = Fecha, y = SerieStnd)) +
geom_line(size = 0.7) + labs(title = paste("IPC Deflactado:",productos[k]) ,y = "IPC Deflactado (por IPC General Suavizado)")
seriegraf
seriegraf =  ggplot(data = BDDgraf, aes(x = Fecha, y = SerieStnd)) +
geom_line(size = 0.7) + theme("minimal")
seriegraf =  ggplot(data = BDDgraf, aes(x = Fecha, y = SerieStnd)) +
geom_line(size = 0.7) + theme("minimal") +
labs(title = paste("IPC Deflactado:",productos[k]) ,y = "IPC Deflactado (por IPC General Suavizado)")
seriegraf =  ggplot(data = BDDgraf, aes(x = Fecha, y = SerieStnd)) +
geom_line(size = 0.7) + theme_minimal()+
labs(title = paste("IPC Deflactado:",productos[k]) ,y = "IPC Deflactado (por IPC General Suavizado)")
seriegraf
seriegraf1 =  ggplot(data = BDDgraf, aes(x = Fecha, y = SerieOrig)) +
geom_line(size = 0.7) + theme_minimal()+
labs(title = paste("IPC Deflactado:",productos[k]) ,y = "IPC Deflactado (por IPC General Suavizado)")
seriegraf2 =  ggplot(data = BDDgraf, aes(x = Fecha, y = SerieStnd)) +
geom_line(size = 0.7) + theme_minimal()+
labs(title = paste("IPC Deflactado:",productos[k]) ,y = "IPC Deflactado (por IPC General Suavizado)")
seriegraf1
seriegraf1 =  ggplot(data = BDDgraf, aes(x = Fecha, y = SerieOrig)) +
geom_line(size = 0.7) + theme_minimal()+
labs(title = paste("IPC:",productos[k]) ,y = "IPC")
seriegraf2 =  ggplot(data = BDDgraf, aes(x = Fecha, y = SerieStnd)) +
geom_line(size = 0.7) + theme_minimal()+
labs(title = paste("IPC Deflactado:",productos[k]) ,y = "IPC Deflactado (por IPC General Suavizado)")
seriegraf1
seriegraf2
multiplot(seriegraf1,seriegraf2,densidades,rows = 3)
install.packages("gridExtra")
library(gridExtra)
grid.arrange(
grobs = list(seriegraf1,seriegraf2,densidades),
widths = c(2, 1),
layout_matrix = rbind(c(1, 3),
c(2, 3))
)
#Graficos Individuales -------------------------------------------
densidades = ggplot(data = BDDgraf , aes(x = SerieStnd, fill = PeriodoCorte, colour =
PeriodoCorte)) +  geom_density(alpha = 0.2) +
ggtitle( paste("IPC:",productos[k]) ) +
geom_vline(data = MediaSeries,
aes(xintercept = Media, color = PeriodoCorte),
linetype = "dashed") +
theme(legend.title = element_text(size=12, color = "salmon", face="bold"),
legend.justification=c(0,1),
legend.position=c(0.05, 0.95),
legend.background = element_blank(),
legend.key = element_blank())
densidades
#Graficos Individuales -------------------------------------------
densidades = ggplot(data = BDDgraf , aes(x = SerieStnd, fill = PeriodoCorte, colour =
PeriodoCorte)) +  geom_density(alpha = 0.2) +
ggtitle( paste("IPC:",productos[k]) ) +
geom_vline(data = MediaSeries,
aes(xintercept = Media, color = PeriodoCorte),
linetype = "dashed") +
theme(legend.title = element_text(size=12, color = "black", face="bold"),
legend.justification=c(0,1),
legend.position=c(0.05, 0.95),
legend.background = element_blank(),
legend.key = element_blank())
densidades
#Grafico Multiple -----------------
grid.arrange(
grobs = list(seriegraf1,seriegraf2,densidades),
widths = c(2, 1),
layout_matrix = rbind(c(1, 3),
c(2, 3))
)
seriegraf2 =  ggplot(data = BDDgraf, aes(x = Fecha, y = log(SerieStnd))) +
geom_line(size = 0.7) + theme_minimal()+
labs(title = paste("IPC Deflactado:",productos[k]) ,y = "IPC Deflactado (por IPC General Suavizado)")
seriegraf2
#Grafico Multiple -----------------
grid.arrange(
grobs = list(seriegraf1,seriegraf2,densidades),
widths = c(2, 1),
layout_matrix = rbind(c(1, 3),
c(2, 3))
)
#Grafico Multiple -----------------
grid.arrange(
grobs = list(seriegraf1,seriegraf2,densidades),
widths = c(3, 2),
layout_matrix = rbind(c(1, 3),
c(2, 3))
)
densidades = ggplot(data = BDDgraf , aes(x = SerieStnd, fill = PeriodoCorte, colour =
PeriodoCorte)) +  geom_density(alpha = 0.2) +
labs( title = paste("IPC Deflactado:",productos[k]), x= "IPC Deflactado por Periodo" ) +
geom_vline(data = MediaSeries,
aes(xintercept = Media, color = PeriodoCorte),
linetype = "dashed") +
theme(legend.title = element_text(size=12, color = "black", face="bold"),
legend.justification=c(0,1),
legend.position=c(0.05, 0.95),
legend.background = element_blank(),
legend.key = element_blank())
#Grafico Multiple -----------------
grid.arrange(
grobs = list(seriegraf1,seriegraf2,densidades),
widths = c(3, 2),
layout_matrix = rbind(c(1, 3),
c(2, 3))
)
MediaSeries
seriegraf2 =  ggplot(data = BDDgraf, aes(x = Fecha, y = SerieStnd)) +
geom_line(size = 0.7) + theme_minimal() +
labs(title = paste("IPC Deflactado:", productos[k]) , y = "IPC Deflactado (por IPC General Suavizado)") +
geom_vline(
xintercept = 10,
linetype = "dashed",
color = "red",
size = 1
)
seriegraf2
BDDgraf
seriegraf2 =  ggplot(data = BDDgraf, aes(x = Fecha, y = SerieStnd)) +
geom_line(size = 0.7) + theme_minimal() +
labs(title = paste("IPC Deflactado:", productos[k]) , y = "IPC Deflactado (por IPC General Suavizado)") +
geom_vline(
xintercept = "2009-01-01",
linetype = "dashed",
color = "red",
size = 1
)
seriegraf2
seriegraf2 =  ggplot(data = BDDgraf, aes(x = Fecha, y = SerieStnd)) +
geom_line(size = 0.7) + theme_minimal() +
labs(title = paste("IPC Deflactado:", productos[k]) , y = "IPC Deflactado (por IPC General Suavizado)") +
geom_vline(
xintercept = as.Date("2009-01-01"),
linetype = "dashed",
color = "red",
size = 1
)
seriegraf2
paste0(periodos,"-01-01")
seriegraf2 =  ggplot(data = BDDgraf, aes(x = Fecha, y = SerieStnd)) +
geom_line(size = 0.7) + theme_minimal() +
labs(title = paste("IPC Deflactado:", productos[k]) , y = "IPC Deflactado (por IPC General Suavizado)") +
geom_vline(
xintercept = as.Date(paste0(periodos,"-01-01")),
linetype = "dashed",
color = "red",
size = 1
)
seriegraf2
seriegraf2 =  ggplot(data = BDDgraf, aes(x = Fecha, y = SerieStnd)) +
geom_line(size = 0.7) + theme_minimal() +
labs(title = paste("IPC Deflactado:", productos[k]) , y = "IPC Deflactado (por IPC General Suavizado)") +
geom_vline(
xintercept = as.Date(paste0(periodos[-c(1,length(periodos))],"-01-01")),
linetype = "dashed",
color = "red",
size = 1
)
seriegraf2
seriegraf1 =  ggplot(data = BDDgraf, aes(x = Fecha, y = SerieOrig)) +
geom_line(size = 0.7) + theme_minimal() +
labs(title = paste("IPC:", productos[k]) , y = "IPC")
seriegraf2 =  ggplot(data = BDDgraf, aes(x = Fecha, y = SerieStnd)) +
geom_line(size = 0.7) + theme_minimal() +
labs(title = paste("IPC Deflactado:", productos[k]) , y = "IPC Deflactado (por IPC General Suavizado)") +
geom_vline(
xintercept = as.Date(paste0(periodos[-c(1,length(periodos))],"-01-01")),
linetype = "dashed",
color = "red",
size = 1
)
densidades = ggplot(data = BDDgraf ,
aes(x = SerieStnd, fill = PeriodoCorte, colour =
PeriodoCorte)) +  geom_density(alpha = 0.2) +
labs(title = paste("IPC Deflactado:", productos[k]), x = "IPC Deflactado por Periodo") +
geom_vline(data = MediaSeries,
aes(xintercept = Media, color = PeriodoCorte),
linetype = "dashed") +
theme(
legend.title = element_text(size = 12, color = "black", face = "bold"),
legend.justification = c(0, 1),
legend.position = c(0.05, 0.95),
legend.background = element_blank(),
legend.key = element_blank()
)
#Grafico Multiple -----------------
grid.arrange(
grobs = list(seriegraf1,seriegraf2,densidades),
widths = c(3, 2),
layout_matrix = rbind(c(1, 3),
c(2, 3))
)
library(tidyverse)
View(BDDgraf)
economics
BDDgraf = data.frame(Fecha, SerieStnd , SerieOrig =  IPC[,k+1], IPC_GeneralS = mav12Gen$mvxRecup , PeriodoCorte)
#Graficos Individuales -------------------------------------------
BDDgraf1 = BDDgraf %>%
select(Fecha, SerieOrig, IPC_GeneralS) %>%
gather(key = "variable", value = "value", -Fecha)
BDDgraf1
View(BDDgraf1)
View(BDDgraf1)
ggplot(BDDgraf1, aes(x = Fecha, y = value)) +
geom_line(aes(color = variable), size = 1) +
scale_color_manual(values = c("#00AFBB", "#E7B800")) +
theme_minimal()
ggplot(BDDgraf1, aes(x = Fecha, y = value)) +
geom_line(aes(color = variable), size = 0.7) +
scale_color_manual(values = c("#00AFBB", "#E7B800")) +
theme_minimal()+
labs(title = paste("IPC:", productos[k]) , y = "IPC")
ggplot(BDDgraf1, aes(x = Fecha, y = value)) +
geom_line(aes(color = variable), size = 0.7) +
scale_color_manual(values = c("#2E2E2E", "#E7B800")) +
theme_minimal()+
labs(title = paste("IPC:", productos[k]) , y = "IPC")
ggplot(BDDgraf1, aes(x = Fecha, y = value)) +
geom_line(aes(color = variable), size = 0.7) +
scale_color_manual(values = c("#E7B800","#2E2E2E")) +
theme_minimal()+
labs(title = paste("IPC:", productos[k]) , y = "IPC")
ggplot(BDDgraf1, aes(x = Fecha, y = value)) +
geom_line(aes(color = variable), size = 0.7) +
scale_color_manual(values = c("#FA5858","#2E2E2E")) +
theme_minimal()+
labs(title = paste("IPC:", productos[k]) , y = "IPC")
names(BDDgraf1)
#Graficos Individuales -------------------------------------------
BDDgraf1 = BDDgraf %>%
select(Fecha,`Serie Original` = SerieOrig, `MM12 - IPC General` = IPC_GeneralS) %>%
gather(key = "variable", value = "value", -Fecha)
BDDgraf1
#Graficos Individuales -------------------------------------------
BDDgraf1 = BDDgraf %>%
select(Fecha,`Serie Original` = SerieOrig, `MM12 (IPC General)` = IPC_GeneralS) %>%
gather(key = "variable", value = "value", -Fecha)
ggplot(BDDgraf1, aes(x = Fecha, y = value)) +
geom_line(aes(color = variable), size = 0.7) +
scale_color_manual(values = c("#FA5858","#2E2E2E")) +
theme_minimal()+
labs(title = paste("IPC:", productos[k]) , y = "IPC")
seriegraf1 = ggplot(BDDgraf1, aes(x = Fecha, y = value)) +
geom_line(aes(color = variable), size = 0.7) +
scale_color_manual(values = c("#FA5858","#2E2E2E")) +
theme_minimal()+
labs(title = paste("IPC:", productos[k]) , y = "IPC")
seriegraf2 =  ggplot(data = BDDgraf, aes(x = Fecha, y = SerieStnd)) +
geom_line(size = 0.7) + theme_minimal() +
labs(title = paste("IPC Deflactado:", productos[k]) , y = "IPC Deflactado (por IPC General Suavizado)") +
geom_vline(
xintercept = as.Date(paste0(periodos[-c(1,length(periodos))],"-01-01")),
linetype = "dashed",
color = "red",
size = 1
)
densidades = ggplot(data = BDDgraf ,
aes(x = SerieStnd, fill = PeriodoCorte, colour =
PeriodoCorte)) +  geom_density(alpha = 0.2) +
labs(title = paste("IPC Deflactado:", productos[k]), x = "IPC Deflactado por Periodo") +
geom_vline(data = MediaSeries,
aes(xintercept = Media, color = PeriodoCorte),
linetype = "dashed") +
theme(
legend.title = element_text(size = 12, color = "black", face = "bold"),
legend.justification = c(0, 1),
legend.position = c(0.05, 0.95),
legend.background = element_blank(),
legend.key = element_blank()
)
#Grafico Multiple -----------------
grid.arrange(
grobs = list(seriegraf1,seriegraf2,densidades),
widths = c(3, 2),
layout_matrix = rbind(c(1, 3),
c(2, 3))
)
#Grafico Multiple -----------------
Grafico = grid.arrange(
grobs = list(seriegraf1,seriegraf2,densidades),
widths = c(3, 2),
layout_matrix = rbind(c(1, 3),
c(2, 3))
)
Grafico
#Grafico Multiple -----------------
grid.arrange(
grobs = list(seriegraf1,seriegraf2,densidades),
widths = c(3, 2),
layout_matrix = rbind(c(1, 3),
c(2, 3))
)
plot(Grafico)
grid.arrange(
grobs = list(seriegraf1,seriegraf2,densidades),
widths = c(3, 2),
layout_matrix = rbind(c(1, 3),
c(2, 3))
)
#Grafico Multiple -----------------
Grafico = grid.arrange(
grobs = list(seriegraf1,seriegraf2,densidades),
widths = c(3, 2),
layout_matrix = rbind(c(1, 3),
c(2, 3))
)
plot(Grafico)
grid.arrange(
grobs = list(seriegraf1,seriegraf2,densidades),
widths = c(3, 2),
layout_matrix = rbind(c(1, 3),
c(2, 3))
)
k=2
periodos = c(2005, 2007, 2010, 2014, 2019)
SerieStnd = as.numeric( IPC[,k+1] / mav12Gen$mvxRecup)
# Serie = mav12Gen$resxRecup
Fecha = as.Date(IPC$Fecha, format = "%d-%m-%y")
Anio = as.numeric(format(Fecha, "%Y"))
etiquetas = c()
for (i in 1:(length(periodos) - 1)) {
etiquetas[i] = paste0("Periodo: ", periodos[i], " - ", periodos[i + 1])
}
PeriodoCorte = cut(Anio,
breaks = periodos ,
labels = etiquetas ,
right = F)
BDDgraf = data.frame(Fecha, SerieStnd , SerieOrig =  IPC[,k+1], IPC_GeneralS = mav12Gen$mvxRecup , PeriodoCorte)
MediaSeries = BDDgraf %>% group_by(PeriodoCorte) %>% summarise(Media = mean (SerieStnd))
#Graficos Individuales -------------------------------------------
BDDgraf1 = BDDgraf %>%
select(Fecha,`Serie Original` = SerieOrig, `MM12 (IPC General)` = IPC_GeneralS) %>%
gather(key = "variable", value = "value", -Fecha)
seriegraf1 = ggplot(BDDgraf1, aes(x = Fecha, y = value)) +
geom_line(aes(color = variable), size = 0.7) +
scale_color_manual(values = c("#FA5858","#2E2E2E")) +
theme_minimal()+
labs(title = paste("IPC:", productos[k]) , y = "IPC")
seriegraf2 =  ggplot(data = BDDgraf, aes(x = Fecha, y = SerieStnd)) +
geom_line(size = 0.7) + theme_minimal() +
labs(title = paste("IPC Deflactado:", productos[k]) , y = "IPC Deflactado (por IPC General Suavizado)") +
geom_vline(
xintercept = as.Date(paste0(periodos[-c(1,length(periodos))],"-01-01")),
linetype = "dashed",
color = "red",
size = 1
)
densidades = ggplot(data = BDDgraf ,
aes(x = SerieStnd, fill = PeriodoCorte, colour =
PeriodoCorte)) +  geom_density(alpha = 0.2) +
labs(title = paste("IPC Deflactado:", productos[k]), x = "IPC Deflactado por Periodo") +
geom_vline(data = MediaSeries,
aes(xintercept = Media, color = PeriodoCorte),
linetype = "dashed") +
theme(
legend.title = element_text(size = 12, color = "black", face = "bold"),
legend.justification = c(0, 1),
legend.position = c(0.05, 0.95),
legend.background = element_blank(),
legend.key = element_blank()
)
#Grafico Multiple -----------------
Grafico = grid.arrange(
grobs = list(seriegraf1,seriegraf2,densidades),
widths = c(3, 2),
layout_matrix = rbind(c(1, 3),
c(2, 3))
)
seriegraf1 = ggplot(BDDgraf1, aes(x = Fecha, y = value)) +
geom_line(aes(color = variable), size = 0.7) +
scale_color_manual(values = c("#FA5858","#2E2E2E")) +
theme_minimal()+
labs(title = paste("IPC:", productos[k]) , y = "IPC") +
theme(
legend.title = element_text(size = 12, color = "black", face = "bold"),
legend.justification = c(0, 1),
legend.position = c(0.05, 0.95),
legend.background = element_blank(),
legend.key = element_blank()
)
seriegraf1
#Graficos Individuales -------------------------------------------
BDDgraf1 = BDDgraf %>%
select(Fecha,`Serie Original` = SerieOrig, `MM12 (IPC General)` = IPC_GeneralS) %>%
gather(key = "Serie", value = "value", -Fecha)
seriegraf1 = ggplot(BDDgraf1, aes(x = Fecha, y = value)) +
geom_line(aes(color = Serie), size = 0.7) +
scale_color_manual(values = c("#FA5858","#2E2E2E")) +
theme_minimal()+
labs(title = paste("IPC:", productos[k]) , y = "IPC") +
theme(
legend.title = element_text(size = 12, color = "black", face = "bold"),
legend.justification = c(0, 1),
legend.position = c(0.05, 0.95),
legend.background = element_blank(),
legend.key = element_blank()
)
seriegraf1
